/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./wwwroot/js/uploadScannedPart.js":
/*!*****************************************!*\
  !*** ./wwwroot/js/uploadScannedPart.js ***!
  \*****************************************/
/***/ (() => {

eval("$(document).ready(function () {\n  // Initialize all modals\n  $('.modal').modal();\n  var partName;\n  var formData;\n  var form;\n\n  // Handle the form submission using event delegation\n  $(document).on('submit', '.update-part-form', function (event) {\n    event.preventDefault();\n    form = $(this);\n    formData = form.serialize();\n\n    // Get the part number and info from the form\n    partName = form.find('input[name=\"PartName\"]').val();\n\n    // Get assigned parts and available parts values\n    var assignedParts = parseInt(form.find('input[name=\"AssignedParts\"]').val());\n    var availableParts = parseInt(form.find('input[name=\"AvailableQuantity\"]').val());\n    var totalParts = assignedParts + availableParts;\n    $('#inputQty').val(assignedParts);\n    $('#maxQty').val(\" / \" + totalParts);\n    $('#assignPart').click(function () {\n      if (assignedParts <= totalParts && availableParts - 1 >= 0) {\n        assignedParts += 1;\n        availableParts -= 1;\n        form.find('input[name=\"AssignedParts\"]').val(assignedParts);\n        form.find('input[name=\"AvailableQuantity\"]').val(availableParts);\n        $('#inputQty').val(assignedParts);\n        formData = form.serialize();\n      }\n    });\n    $('#removePart').click(function () {\n      if (assignedParts >= 0 && availableParts + 1 <= totalParts) {\n        assignedParts -= 1;\n        availableParts += 1;\n        form.find('input[name=\"AssignedParts\"]').val(assignedParts);\n        form.find('input[name=\"AvailableQuantity\"]').val(availableParts);\n        $('#inputQty').val(assignedParts);\n        formData = form.serialize();\n      }\n    });\n\n    // Set the job number to the header\n    $(\"#JobPartHeader\").text(\"Part: \" + partName);\n\n    // Get the instance of the quantity modal and open it\n    var QuantityModalInst = M.Modal.getInstance($(\"#quantityModal\"));\n    if (QuantityModalInst) {\n      QuantityModalInst.open();\n    } else {\n      console.error(\"Quantity modal instance is undefined.\");\n    }\n    console.log(formData);\n  });\n\n  // Handle the form submission using event delegation\n  $(document).on('submit', '.add-part-form', function (event) {\n    event.preventDefault();\n    form = $(this);\n    formData = form.serialize();\n    if (formData) {\n      // Optionally send the form data via AJAX\n      $.ajax({\n        type: 'POST',\n        url: form.attr('action'),\n        data: formData,\n        success: function success(response) {\n          console.log('Form submitted successfully:', response);\n          // Optionally update the partial view with the new data\n          $('#divPartial').html(response);\n        },\n        error: function error(jqXHR, textStatus, errorThrown) {\n          console.error('Error submitting form:', textStatus, errorThrown);\n        }\n      });\n    }\n  });\n\n  // Handle the form submission using event delegation\n  $(document).on('submit', '.remove-part-form', function (event) {\n    event.preventDefault();\n    form = $(this);\n    formData = form.serialize();\n    if (formData) {\n      // Optionally send the form data via AJAX\n      $.ajax({\n        type: 'POST',\n        url: form.attr('action'),\n        data: formData,\n        success: function success(response) {\n          console.log('Form submitted successfully:', response);\n          // Optionally update the partial view with the new data\n          $('#divPartial').html(response);\n        },\n        error: function error(jqXHR, textStatus, errorThrown) {\n          console.error('Error submitting form:', textStatus, errorThrown);\n        }\n      });\n    }\n  });\n  $('#updatePart').click(function () {\n    if (formData) {\n      // Optionally send the form data via AJAX\n      $.ajax({\n        type: 'POST',\n        url: form.attr('action'),\n        data: formData,\n        success: function success(response) {\n          console.log('Form submitted successfully:', response);\n          // Optionally update the partial view with the new data\n          $('#divPartial').html(response);\n          // Reinitialize modals after updating the partial view\n          $('.modal').modal();\n          // Get the instance of the quantity modal and open it\n          var QuantityModalInst = M.Modal.getInstance($(\"#quantityModal\"));\n          if (QuantityModalInst) {\n            QuantityModalInst.close();\n          } else {\n            console.error(\"Quantity modal instance is undefined.\");\n          }\n        },\n        error: function error(jqXHR, textStatus, errorThrown) {\n          console.error('Error submitting form:', textStatus, errorThrown);\n        }\n      });\n    }\n  });\n\n  // Event handler for the \"Google Part\" button\n  $('#googlePartButton').click(function () {\n    if (partName) {\n      var googleSearchUrl = 'https://www.google.com/search?tbm=shop&q=' + encodeURIComponent(partName);\n      window.open(googleSearchUrl, '_blank');\n    } else {\n      alert(\"Part number is not available.\");\n    }\n  });\n  $('#SpecificSearch').click(function () {\n    var result = $('#resultText').val();\n\n    //Grab list of parts\n    $('#partsTable tbody tr').each(function () {\n      var partName = $(this).find('td').eq(0).text().toLowerCase();\n\n      //Search list for specific part\n      if (partName.trim() == result.toLocaleLowerCase().trim()) {\n        console.log(\"Part Found\" + partName.trim());\n\n        //Get List of details about the part\n        var jobPartId = $(this).find('input[name=\"JobPartId\"]').val();\n        var partId = $(this).find('input[name=\"PartId\"]').val();\n        var partName = $(this).find('input[name=\"PartName\"]').val();\n        var jobId = $(this).find('input[name=\"JobId\"]').val();\n        var purchaseOrderId = $(this).find('input[name=\"PurchaseOrderId\"]').val();\n        var status = $(this).find('input[name=\"Status\"]').val();\n        var assignedParts = $(this).find('input[name=\"AssignedParts\"]').val();\n        var availableQuantity = $(this).find('input[name=\"AvailableQuantity\"]').val();\n        $('#JobPartId').val(jobPartId);\n        $('#PartId').val(partId);\n        $('#PartName').val(partName);\n        $('#JobId').val(jobId);\n        $('#PurchaseOrderId').val(purchaseOrderId);\n        $('#Status').val(status);\n        $('#AssignedParts').val(assignedParts);\n        $('#AvailableQuantity').val(availableQuantity);\n        if ($('#continousBN').text().trim() === 'false') {\n          $('#scanUpdatePart').click();\n        } else {\n          $('#scanAddPart').click();\n        }\n        return true;\n        console.log(\"Also Job Id: \" + jobPartId);\n      }\n      console.log(partName);\n    });\n\n    //false\n    //Click Search button\n    //Show Search results for item\n    //TODO: ADD SEARCH FUNCITON\n    console.log(\"This scan was succesful: \" + result);\n  });\n});\n\n//# sourceURL=webpack://scannerwebappupdate/./wwwroot/js/uploadScannedPart.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./wwwroot/js/uploadScannedPart.js"]();
/******/ 	
/******/ })()
;