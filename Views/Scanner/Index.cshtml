<style>
    .text-btn-container {
        display: grid;
        grid-template-columns: auto 50px; /* Adjust the width of the button container as needed */
        grid-template-rows: repeat(3, 1fr); /* Define two rows */
        gap: 10px; /* Space between the textarea and the button container */
        align-items: stretch; /* Make sure items stretch to the full height of the grid */
    }

    .input-field {
        display: flex;
        flex-direction: column;
        flex: 1; /* Ensure input field takes up remaining vertical space */
    }

        .input-field input {
            margin-top: auto; /* Push the input field to the bottom */
        }

    .vertical-btn-container {
        display: grid;
        grid-template-rows: repeat(3, 1fr); /* Create three equal rows */
        gap: 10px; /* Space between buttons */
    }

    #resultText{
        grid-row: span 2; /* Make the textarea span two rows */
        height: 100%;
        display: flex;
        justify-content: center; /* Center horizontally */
        align-items: center; /* Center vertically */
        font-size: 30px;
    }


    .modal {
        position: relative;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .modal-content {
        position: relative;
        width: 100%;
        height: 100%;
        padding: 0;
    }

    .reader-container {
        position: relative;
        width: 100%;
        height: 100%;
    }

    #reader {
        width: 100%;
        height: 100%;
    }

    .btn-scanning {
        position: absolute;
        bottom: 10px;
        right: 10px;
        z-index: 1;
    }

</style>

<h1>@ViewBag.PartFound</h1>
<!-- Scan Modal Trigger -->
@* <button data-target="ScanDialog" class="btn modal-trigger">Scan Item</button> *@
<div>
    <!-- Scaan Modal Structure TODO: Add password function to dialog -->
    <div id="ScanDialog" class="modal">
        <div class="modal-content">
            <!--QR Code Reader-->
            <div class="reader-container">
                <div id="reader"></div>
            </div>
            <div class="btn-scanning">
                @* <button class="btn-floating btn-small waves-effect blue darken-2" id="startScan"><i class="material-icons">play_arrow</i>Start Scan</button> *@
                @* <button class="btn-floating btn-small waves-effect blue darken-2" id="stopScan"><i class="material-icons">pause</i>Pause Scan</button> *@
                <button class="btn-floating btn-small waves-effect blue darken-2" id="switchCamera"><i class="material-icons">cameraswitch</i>Switch</button>
            </div>
        </div>
    </div>


    <div>

        <!--Page Header-->
        <div class="row">
            <div class="col s12">
                @* <h2>Scanning Part:</h2> *@
            </div>
        </div>

        <form asp-controller="Scanner" asp-action="ProcessScannedPart" method="post">
            <!--Scanner text box and buttons-->
            <div class="row">
                <!--Form containing scanned part number-->
                <div class="col s12">
                    <div class="text-btn-container">
                        <div class="input-field center-align">
                            <!--Displays scanned part number-->
                            <label class="text-black" for="resultText">Scan Part</label>
                            <input type="text" id="resultText" readonly name="scannedPart" />
                        </div>

                        <div class="vertical-btn-container">
                            <!--Edit and Manually enter item number-->
                            <a id="edit" class="btn tooltipped waves-effect blue darken-2" data-position="bottom" data-tooltip="I am a tooltip"><i class="material-icons">create</i></a>
                            <!--Shuffle and select an item at random from avalible parts (REMOVE DURING  PRODUCTION)-->
                            <a id="shuffle" class="btn-floating btn-small waves-effect blue darken-2" asp-area="" asp-controller="Scanner" asp-action="LoadRandomPart"><i class="material-icons">shuffle</i></a>
                            <!--Clear the item number that has been scanned or entered-->
                            <a id="clear" class="btn-floating btn-small waves-effect"><i class="material-icons">clear</i></a>
                        </div>
                    </div>
                </div>
            </div>

            <!--Submit and scan buttons-->
            <div class="row center-align valign-wrapper">
           
                    <div class="col s6 right-align">
                        <!--Allows user to rescan-->
                        <a class="waves-effect blue darken-2 btn" asp-area="" asp-controller="Scanner" asp-action=""><i class="material-icons left">qr_code_scanner</i>New Scan</a>
                    </div>
                    <div class="col s6 left-align">
                        <!--Searches for part in DB-->
                        <button class="btn waves-effect blue darken-2" type="submit" name="action">
                            Submit
                            <i class="material-icons right">send</i>
                        </button>
                    </div>
              
            </div>
        </form>
    </div>
</div>

<script src="~/js/materialize.min.js"></script>
<!-- Webpack bundle of scripts-->
<script src="~/dist/bundle.js" defer></script>
<script>

    document.addEventListener('DOMContentLoaded', function () {
        // var elems = document.querySelectorAll('.modal');
        // var instances = M.Modal.init(elems);
        M.AutoInit();

        let editBN = document.getElementById('edit');
        let shuffleBN = document.getElementById('shuffle');
        let clearBN = document.getElementById('clear');
        let resultText = document.getElementById('resultText');

        clearBN.addEventListener('click', function () {
            resultText.value = "";
        });

        editBN.addEventListener('click', function () {
            resultText.readOnly = !resultText.readOnly; // Toggle readonly attribute
            if (resultText.readOnly) {
                resultText.value = "Scan"; // Example text when readonly
            } else {
                resultText.value = ""; // Clear text when editable
            }
        });

    });
</script>




