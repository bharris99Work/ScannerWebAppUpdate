@model JobPartsPartialViewModel

<head>
    <style>
        /* Style the bottom menu */
        .bottom-menu {
            position: fixed;
            bottom: 0;
            left: 0;
            width: 100%;
            background-color: #ffffff; /* White background */
            box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.3); /* Shadow for the top edge */
            display: flex;
            align-items: center !important;
            justify-content: center !important;
            padding: 10px 0;
            z-index: 800; /* Ensures the menu is above other content */
        }
    </style>
    <!-- Include jQuery Library -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/eruda"></script>
</head>


<input id="jobId" type="hidden" value="@ViewBag.JobId" />
<input id="functionType" type="hidden" />


<button id="openScanDialog" style="display:none;"></button>


<div>
    <!--Dialog which shows the Search VIewComponent which features read and search-->
    <div id="SearchDialog" class="modal small-dialog">
        <div class="modal-container">
            <div class="row">
                <div class="col s12">
                    <div class="row">
                        <div class="col s12">
                            <!--Search Component-->
                            @await Component.InvokeAsync("Search")
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <!-- Scan Modal: Features Camera View-->
    <div id="ScanDialog" class="modal">
        <div class="modal-container">

            <!--QR Code Reader-->
            <div class="row">
                <div id="reader"></div>
            </div>

            <!--StartScan and PauseScan buttons-->
            <div class="scan-button-container">
                <button class=" waves-effect scan-button btn-small light-blue darken-4" id="startScanning">Start Scanning</button>
            </div>
        </div>
    </div>


    <!--Displays at bottom of Scan/Read and presents result-->
    <div id="resultContainer" class="result-container">
            <!-- Header - Exit Button right aligned-->
            <div class="row">
                <!--Header-->
                <div class="col s6 ">
                    <h6 class="white-text left" id="resultStatus"></h6>
                </div>
                <!--Exit-->
                <div class="col s6">
                <button id="exitResults" class="right waves-effect scan-button btn-small red">X</button>
                </div>
            </div>
            <!-- Result - Google Button-->
            <div class="row">
                <div class="part-google">
                    <a  id="partGoogle" target="_blank">This is Test Text</a>
                </div>
            </div>
         <!-- OK (Exit Button)-->
        <div class="row center" style="display:none;">
                <div class="col s12">
                <button class=" waves-effect btn-small light-blue darken-4" id="closeResults">Close</button>
                </div>
            </div>
    </div>


    <!-- Quantity Modal -->
    <div id="quantityModal" class="modal quantity-dialog">
        <div class="valign-wrapper">
            <div class="row">
                <div class="section"></div>

                <!--Type Of Button Pressed TO trigger Dialog (Sign Off, Used....)-->
                <div class="row">
                    <div class="col s12">
                        <h4 id="functionTypeHeader">FunctionType</h4>
                    </div>
                    <div class="divider"></div>
                </div>
                <!--Part Info-->
                <div class="row">
                    <h5 id="JobPartHeader">Part#: </h5>
                </div>
                <!--Google Search Part-->
                <div class="row">
                    <button class="waves-effect btn blue darken-2" id="googlePartButton"><i class="material-icons right indigo-text text-darken-4">travel_explore</i>Google Part</button>
                </div>
                <!--Adding and Subtracting Quantity Buttons and Feedback-->
                <div class="row">
                    <div class="col s12">
                        <label>Quantity:</label>
                        <input id="inputQty" type="text" />
                        <input id="maxQty" type="text" disabled />

                        <button class="waves-effect btn blue darken-2" id="assignPart">
                            <i class="material-icons indigo-text text-darken-4">add</i>
                        </button>
                        <button class="waves-effect btn blue darken-2" id="removePart"><i class="material-icons indigo-text text-darken-4">remove</i></button>
                    </div>
                </div>


                @*  <div class="row">
                <label for="jobPartStatus">Status:</label>
                <select id="jobPartStatus"></select>
                </div> *@


                <div id="returnElements" style="display:none;">
                    <!--Return Option Box-->
                    <div class="row">
                        <div class="col s12">
                            <!--Label for Return options-->
                            <label class="text-black text-darken-2" for="returnOptions">Return Option: </label>
                            <!--Combobox-->
                            <div id="returnSelectWrapper">
                                <select id="returnOptions">
                                    <option value="0" disabled>Type Or Select Reason For Return</option>
                                    @{
                                        int returncount = 1;
                                        foreach (var returnOption in ViewBag.ReturnOptions)
                                        {
                                            <option value="@returnOption.Description">@returnOption.Description</option>
                                            returncount++;
                                        }
                                    }
                                </select>
                                <input type="hidden" id="hiddenReturnOpt" name="ReturnOption" />
                            </div>
                            <div id="returnOtherWrapper" style="display:none;">
                                <textarea class="materialize-textarea" placeholder="Type Return Reason" type="text" id="returnOptionText" name="returnOther"></textarea>
                            </div>

                            <!--Allows user to enter an option manually-->
                            <a class="waves-effect btn blue darken-2" id="otherReturn">
                                Other
                            </a>
                            <!--Clears selected option-->
                            <a class="waves-effect btn red accent-4" id="clearReturn">
                                Clear
                            </a>
                            <!--Clear/Other-->
                            <div class="btn-container">
                            </div>
                        </div>
                    </div>



                    <!--Prints Labels-->
                    <div class="row">

                        @*     <form id="returnPartPrint" asp-action="CreateBarcode" asp-controller="Returns" method="post">
                        <input type="hidden" id="PartName" name="PartName" value="" />

                        <input type="hidden" id="ReturnNumber" name="ReturnNumber" value="" />
                        <input type="hidden" id="ReturnReason" name="ReturnReason" value="" />

                        </form>
                        <button class="waves-effect btn blue darken-2">Print Labels</button> *@
                    </div>

                </div>

                <!--Triggers Submission-->
                <div class="row">
                    <button class="waves-effect btn blue darken-2" id="updatePart">Update Part</button>
                </div>

                <div class="row center">
                    <h5 class="red-text" id="errorResponse"></h5>
                </div>
            </div>

        </div>
        
    </div>


    <!--PO Selector Dialog-->
    <div id="poSelectDialog" class="modal result-Dialog">

        <div class="row">
            <div class="col s12">
                <h4>Select Purchase Order:</h4>
                <h6>Multiple Parts found, select PO associated with part scanned:</h6>
            </div>
        </div>


        <div class="row">
            <div class="col s12">
                <select id="availablePOs">
                </select>
            </div>
        </div>

        <button class="waves-effect btn blue darken-2" id="confirmPOSelect">Confirm</button>
    </div>






    <!--Header-->
    <div class="row">
        <div class="col s12">
            <h3>Job Manager:</h3>

            <!--For mobile debugging. TODO: Remove on production-->
            <div class="row">
                <div class="consolecontainer"></div>
            </div>

            </div>
        @* <h3 class="title-header">@ViewBag.JobName</h3> *@
    </div>

    <!--Add Part btn-->
    <div class="row valign-wrapper">
        <div class="col s12">
            <a class="btn" style="display:none;" id="testBtn">Test</a>
            <h4 class="left">@ViewBag.JobName</h4>
        </div>
    </div>

    
    <!--Scan and Sign Off btns-->
    <div class="row hide-on-small-and-down">
        <div class="col s12">


            <form asp-action="CheckInParts" asp-controller="Jobs">
                <input type="hidden" name="jobId" value="@ViewBag.JobId" />
                <button class="waves-effect btn right blue darken-2"><i class="material-icons left indigo-text text-darken-4">qr_code_scanner</i>Check-In Parts</button>
            </form>


            <a class="waves-effect btn modal-trigger right green accent-4 " href="#truckPartsModal"><i class="material-icons left indigo-text text-darken-4">add</i>Add Parts</a>


            </div>
        
        <div style="display:none;" class="multi-btn-container">
            <!--Not used btn-->
            <div class="left-btn-container">
                <button class="waves-effect btn modal-trigger red" href="#SearchDialog" style="display:none;" id="notUsedPart"><i class="material-icons left indigo-text text-darken-4">qr_code_scanner</i>Not Used (Scan)</button>
            </div>
            <div class="right-btn-container">

                    <button class="waves-effect btn blue darken-2 modal-trigger" style="display:none;" href="#SearchDialog" id="signPart"><i class="material-icons left indigo-text text-darken-4">qr_code_scanner</i>Sign Off (Scan)</button>
                    <button class="waves-effect btn blue darken-2 modal-trigger" style="display:none;" href="#SearchDialog" id="usedPart"><i class="material-icons left indigo-text text-darken-4">qr_code_scanner</i>Use Part (Scan)</button>
            </div>
        </div>
    </div>


    <!--Search Form Items-->
@*     <div class="row">
        <div class="col s12 z-depth-1">
            <label for="itemNumberSearch">Item Number:</label>
            <input type="text" id="itemNumberSearch" placeholder="Item Number" />

            <button class="waves-effect btn-small blue darken-2">Search</button>
        </div>
    </div> *@



    <!--Partial VIew of Job Parts-->
    <div class="row">
        <div id="divPartial" class="col s12">
            @await Html.PartialAsync("_JobParts", Model)
        </div>
    </div>



    <!--Button Menu (Footer?)-->
    <div class="bottom-menu hide-on-med-and-up">
        <div class="row">
            <div class="col s12">
                <div class="multi-btn-container">
                
                <form asp-action="CheckInParts" asp-controller="Jobs">
                    <input type="hidden" name="jobId" value="@ViewBag.JobId" />
                    <button class="waves-effect btn right blue darken-2"><i class="material-icons left indigo-text text-darken-4">qr_code_scanner</i>Check-In Parts</button>
                </form>
                <a class="waves-effect btn modal-trigger right green accent-4 " href="#truckPartsModal"><i class="material-icons left indigo-text text-darken-4">add</i>Add Parts</a>
                </div>
            </div>
        </div>
    </div>
</div>
</div>




@section Scripts {

    <script>
        eruda.init();
        let el = document.createElement('div');
        document.body.appendChild(el);

        eruda.init({
            container: el,
            tool: ['console', 'elements']
        });
    </script>


    <!--Sets Type of Button Clicked-->
    <script>
        // Attach event listeners once the modal instance is available
        $('#signPart').on('click', function () {
            $('#functionType').val("1");
            $('#functionTypeHeader').text("Sign Parts Off:");
            console.log('Sign Part Function');
        });

        $('#addPart').on('click', function () {
            $('#functionType').val("2");
            $('#functionTypeHeader').text("Add Part To Job:");
            console.log('Add Part Function');
        });

        $('#notUsedPart').on('click', function () {
            $('#functionType').val("3");
            $('#functionTypeHeader').text("Return Part:");
            console.log('Not Used Part Function');
        });

        $('#usedPart').on('click', function () {
            $('#functionType').val("4");
            $('#functionTypeHeader').text("Update Used:");
            console.log('Update Part Function');
        });

        //# sourceURL=openscan.js
    </script>

    <!--Searches JobPartsTable or TruckPartsTable-->
    <script>
        var matchingParts = [];

        function scannedPartSearch() {
            var result = $('#resultText').val();
            matchingParts = [];
          

            var foundparts = 0;

            var found = false;
            if ($('#functionType').val() === "1" || $('#functionType').val() === "3" || $('#functionType').val() === "4") {
                //Grab list of parts from jobParts
                $('#partsTable tbody tr').each(function () {

                    var partName = $(this).find('td').eq(0).text().toLowerCase();

                    //Search list for specific part
                    if (partName.trim() == result.toLocaleLowerCase().trim()) {
                        console.log("Part Found" + partName.trim());

                        //Get List of details about the part
                        var jobPartId = $(this).find('input[name="JobPartId"]').val();
                        var partId = $(this).find('input[name="PartId"]').val();
                        var partName = $(this).find('input[name="PartName"]').val();
                        var jobId = $(this).find('input[name="JobId"]').val();
                        var purchaseOrderId = $(this).find('input[name="PurchaseOrderId"]').val();
                        var poname = $(this).find('input[name="POName"]').val();
                        var status = $(this).find('input[name="Status"]').val();
                        var assignedParts = $(this).find('input[name="AssignedParts"]').val();
                        var availableQuantity = $(this).find('input[name="AvailableQuantity"]').val();
                        var signedOff = $(this).find('input[name="SignedOff"]').val();

                        // Create an object to hold the part details
                        var partDetails = {
                            jobPartId: jobPartId,
                            partId: partId,
                            partName: partName,
                            jobId: jobId,
                            purchaseOrderId: purchaseOrderId,
                            poname: poname,
                            status: status,
                            assignedParts: assignedParts,
                            availableQuantity: availableQuantity,
                            signedOff: signedOff
                        };

                        // Add the part details to the matchingParts array
                        matchingParts.push(partDetails);

                        found = true;
                        console.log("Part has been found");
                        //return false;
                        foundparts++;

                    }

                    console.log(partName);
                });

                if (matchingParts.length > 1) {
                    // call OpenSelectPO(matchingParts)
                    OpenPOSelect(matchingParts);
                }
                else if (matchingParts.length === 1){
                    fillFormAndSubmit(matchingParts[0]);
                }
                else{
                    return false;
                }

                console.log(foundparts);

            }
            else if ($('#functionType').val() === "2") {

                //Grab list of Truck Parts
                $('#truckPartsTable tbody tr').each(function () {

                    var partName = $(this).find('td').eq(0).text().toLowerCase();

                    //Search list for specific part
                    if (partName.trim() == result.toLocaleLowerCase().trim()) {
                        console.log("Part Found" + partName.trim());

                        //Get List of details about the part
                        var jobPartId = $(this).find('input[name="JobPartId"]').val();
                        var partId = $(this).find('input[name="PartId"]').val();
                        var partName = $(this).find('input[name="PartName"]').val();
                        //var jobId = $(this).find('input[name="JobId"]').val();
                     
                        var purchaseOrderId = $(this).find('input[name="PurchaseOrderId"]').val();
                        var status = $(this).find('input[name="Status"]').val();
                        var truckId = $(this).find('input[name="TruckId"]').val();
                        var assignedParts = $(this).find('input[name="AssignedParts"]').val();
                        var availableQuantity = $(this).find('input[name="AvailableQuantity"]').val();

                        var jobid = $('#jobId').val();

                        $('#JobPartId').val(jobPartId);
                        $('#PartId').val(partId);
                        $('#PartName').val(partName);
                        $('#JobId').val(jobid);
                        $('#PurchaseOrderId').val(purchaseOrderId);
                        $('#Status').val(status);
                        $('#AssignedParts').val(assignedParts);
                        $('#AvailableQuantity').val(availableQuantity);
                        $('#TruckId').val(truckId);

                        $('#updateScanPart').click();

                        found = true;
                        console.log("Part has been found");
                        return false;

                    }

                    console.log(partName);
                });
            }


            return found;


        }


        function OpenPOSelect(parts){
            //Grab select
            var poselect = $('#availablePOs');

            var instance = M.FormSelect.getInstance(poselect);
            instance.destroy()

            poselect.empty();

            // Initialize the select input with Materialize
            M.FormSelect.init(poselect);

            parts.forEach(function (part, index) {
                poselect.append('<option value="' + index + '">' + part.poname + '</option>');
            });

            // Initialize the select input with Materialize
            M.FormSelect.init(poselect);


            // Open the modal
            var poSelectDialogInst = M.Modal.getInstance($('#poSelectDialog'));
            poSelectDialogInst.open();

        }

        // Function to fill the form and submit it
        function fillFormAndSubmit(part) {
            $('#JobPartId').val(part.jobPartId);
            $('#PartId').val(part.partId);
            $('#PartName').val(part.partName);
            $('#JobId').val(part.jobId);
            $('#PurchaseOrderId').val(part.purchaseOrderId);
            $('#Status').val(part.status);
            $('#AssignedParts').val(part.assignedParts);
            $('#AvailableQuantity').val(part.availableQuantity);
            $('#SignedOff').val(part.signedOff);

            // Open the modal
            var poSelectDialogInst = M.Modal.getInstance($('#poSelectDialog'));
            if (poSelectDialogInst){
                poSelectDialogInst.close();

            }

            // Trigger the form submission
            $('#updateScanPart').click();
        }

        // Event listener for the PO selection in the modal
        $('#confirmPOSelect').click(function () {

            var selectedPartIndex = $('#availablePOs').val();
            if (selectedPartIndex !== null) {
                var selectedPart = matchingParts[selectedPartIndex];
                fillFormAndSubmit(selectedPart);
            }
        });
        //# sourceURL=somename.js
    </script>


    <script src="~/js/materialize.min.js"></script>
    <script src="~/js/JobParts.js"></script>
    <script src="~/dist/uploadScanPart.bundle.js"></script>
    <script src="~/dist/scanditscanning.bundle.js"></script>
}



